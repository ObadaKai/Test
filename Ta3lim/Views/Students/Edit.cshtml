@model Ta3lim.Database.Student

@{
    ViewBag.Title = "تعديل";
}

<h2>تعديل</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>طالب</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.BDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.BDate, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Certificate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Certificate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Certificate, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
            </div>@Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("Centerid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Centerid, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Centerid, "Centerid", htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("Stageid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Stageid, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Stageid, "Stageid", htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("Regimentid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Regimentid, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Regimentid, "Regimentid", htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.SDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.SDate, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.EDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.EDate, htmlAttributes: new { @class = "control-label col-md-2" })


        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="حفظ" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("العودة إلى اللائحة", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
